variables:
  PIP_CACHE_DIR: ${CI_PROJECT_DIR}/.cache/pip
  POETRY_VIRTUALENVS_IN_PROJECT: 'true'

cache:
  key: ${CI_JOB_NAME}
  paths:
  - .cache/pip
  - .venv

stages:
- quality
- tests
- deploy

.install-deps-template: &install-deps
  before_script:
  - pip install poetry
  - poetry --version
  - poetry install -vv

# Quality jobs

.quality-template: &quality
  <<: *install-deps
  image: python:3.6
  stage: quality

check-docs:
  <<: *quality
  script: poetry run duty check-docs

check-code-quality:
  <<: *quality
  script: poetry run duty check-code-quality

check-types:
  <<: *quality
  script: poetry run duty check-types

check-dependencies:
  <<: *quality
  script: poetry run duty check-dependencies

# Tests jobs

.test-template: &test
  <<: *install-deps
  stage: tests
  script: poetry run duty test
  artifacts:
    paths:
    - .coverage-*

python3.6:
  <<: *test
  image: python:3.6

python3.7:
  <<: *test
  image: python:3.7

python3.8:
  <<: *test
  image: python:3.8

python3.9:
  <<: *test
  image: python:3.9

python3.10:
  <<: *test
  image: python:3.10.0

pages:
  stage: deploy
  <<: *install-deps
  image: python:3.6
  dependencies:
  - python3.6
  - python3.7
  - python3.8
  - python3.9
  - python3.10
  script:
  - poetry run duty coverage
  - poetry run duty docs
  coverage: /^TOTAL.+?(\d+\.\d+\%)$/
  artifacts:
    paths:
    - public
  only:
  - main
